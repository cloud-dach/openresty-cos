worker_processes  1;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile           on;
    keepalive_timeout  65;
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=my_cache:10m max_size=1g
                 inactive=60m use_temp_path=off;
    server {
        listen 8080;
        access_log /dev/stdout;
        # must be either / or like /path/
        rewrite  ^/$   /index.html;
        location /{

        proxy_cache            my_cache;
        set $bucket           'S3_BUCKET';
        set $s3_access        'S3_ACCESS_KEY';
        set $s3_secret        'S3_SECRET_KEY';
        set $s3_host          'COS_ENDPOINT';
        # Call Lua Script
        access_by_lua "local cos = require 'resty.cos'; cos.set_header(ngx.var.s3_host,ngx.var.bucket,ngx.var.request_uri, ngx.var.request_method, ngx.var.s3_access,ngx.var.s3_secret )";
        proxy_pass             COS_URI/;
        proxy_http_version     1.1;
        proxy_hide_header      Content-Type;
        proxy_hide_header      x-amz-id-2;
        proxy_hide_header      x-amz-request-id;
        proxy_hide_header      x-amz-meta-server-side-encryption;
        proxy_hide_header      x-amz-server-side-encryption;
        proxy_hide_header      Set-Cookie;
        proxy_ignore_headers   Set-Cookie;
        proxy_hide_header      x-amz-meta-s3cmd-attrs;
        proxy_hide_header      ETag;
        proxy_hide_header      X-Clv-Request-Id;
        proxy_hide_header      X-Clv-S3-Version;
        proxy_intercept_errors on;
        # cache settings
        proxy_cache_revalidate on;
        proxy_buffering        on;
        proxy_buffers 256 4k;
        proxy_connect_timeout 30;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404      1m;
        add_header X-Cache $upstream_cache_status;
        proxy_cache_convert_head off;
        proxy_cache_key         $request_method$proxy_host$request_uri;
        proxy_ignore_headers    X-Accel-Expires Expires Cache-Control;
        }
    }
}
